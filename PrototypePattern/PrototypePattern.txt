

如果对象的创建成本比较大,而同一个类的不同对象之间差别不大（大部分字段都相同）,
在这种情况下,我们可以利用对已有对象（原型）进行复制（或者叫拷贝）的方式来创建新对象,以达到节省创建时间的目的。
这种基于原型来创建对象的方式就叫作原型设计模式（Prototype Design Pattern）,简称原型模式.


利用已有的一个原型对象,快速地生成和原型对象一样的实例
原型模式有两种实现方法:深拷贝和浅拷贝
浅拷贝只会复制对象中基本数据类型数据和引用对象的内存地址,不会递归地复制引用对象,以及引用对象的引用对象.
而深拷贝得到的是一份完完全全独立的对象。所以,深拷贝比起浅拷贝来说,更加耗时,更加耗内存空间。


如果要拷贝的对象是不可变对象,浅拷贝共享不可变对象是没问题的,
但对于可变对象来说,浅拷贝得到的对象和原始对象会共享部分数据，就有可能出现数据被修改的风险,也就变得复杂多了。

除非深拷贝操作非常耗时,否则大部分情况下我们都应该使用深拷贝而不要为了一点点性能的提升而使用浅拷贝



Participants:
The classes and objects participating in this pattern are:
1.Prototype  
This is an interface which is used for the types of object that can be cloned itself.

2.ConcretePrototype  
This is a class which implements the Prototype interface for cloning itself.

3.Client  
creates a new object by asking a prototype to clone itself